[{"path":"https://p0bs.github.io/DataKindR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 DataKindR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://p0bs.github.io/DataKindR/articles/postcodes-vignette.html","id":"tidying-the-postcodes","dir":"Articles","previous_headings":"","what":"Tidying the postcodes","title":"Getting geographic metadata from UK postcodes","text":"can see, postcodes poorly formatted incomplete. tidy , ’ll use postcodes function passcode_type parameter \"full\". , exclude missing entries (partial postcode N1). extract resulting postcodes list use postcode API. (chose remove NA values case many exist.)","code":"data_tidy <- data |>    rowwise() |>    mutate(     postcode_clean = postcodes(       postcode_value = postcode,        postcode_type = \"full\"       )     ) |>    ungroup()   data_tidy #> # A tibble: 6 × 3 #>   id    postcode    postcode_clean #>   <chr> <chr>       <chr>          #> 1 A1    \"Me1 2re\"   ME1 2RE        #> 2 B1    \"W1A 1AA \"  W1A 1AA        #> 3 B2    \"N1\"        NA             #> 4 C1    \" SW1A 0AA\" SW1A 0AA       #> 5 C2    \"XX1 0XX\"   XX1 0XX        #> 6 C3    \"sw6 1hs\"   SW6 1HS list_postcodes <- data_tidy |>    pull(postcode_clean)  list_postcodes #> [1] \"ME1 2RE\"  \"W1A 1AA\"  NA         \"SW1A 0AA\" \"XX1 0XX\"  \"SW6 1HS\""},{"path":"https://p0bs.github.io/DataKindR/articles/postcodes-vignette.html","id":"getting-geographic-metadata-on-the-clean-postcodes","dir":"Articles","previous_headings":"","what":"Getting geographic metadata on the clean postcodes","title":"Getting geographic metadata from UK postcodes","text":"Despite cleaning, still issue, penultimate postcode correctly formatted real. therefore want ensure postcode (XX1 0XX) doesn’t cause entire run break, thereby stopping us getting information final postcode. , wrap API function safely function purrr package. now call postcode API list postcodes. extract results call, reshaping .","code":"safely_postcodes_metadata <- safely(postcodes_metadata) metadata_postcodes <- map(   .x = list_postcodes,    .f = ~safely_postcodes_metadata(postcode_value = .x)   )    data_out <- tibble(   postcode = list_postcodes,   results = metadata_postcodes |>      map(\"result\")   ) |>   tidyr::drop_na() |>   unnest(cols = results)  data_out #> # A tibble: 4 × 21 #>   postcode pcd     rgn       rgn_name   pcon    pcon_name laua  laua_name lsoa21 #>   <chr>    <chr>   <chr>     <chr>      <chr>   <chr>     <chr> <chr>     <chr>  #> 1 ME1 2RE  ME1 2RE E12000008 South East E14001… Chatham … E060… Medway    E0101… #> 2 W1A 1AA  W1A 1AA E12000007 London     E14001… Cities o… E090… Westmins… E0100… #> 3 SW1A 0AA SW1A0AA E12000007 London     E14001… Cities o… E090… Westmins… E0100… #> 4 SW6 1HS  SW6 1HS E12000007 London     E14001… Chelsea … E090… Hammersm… E0100… #> # ℹ 12 more variables: lsoa21_name <chr>, msoa21 <chr>, msoa21_name <chr>, #> #   ward <chr>, ward_name <chr>, oac11_code <chr>, oac11_group <chr>, #> #   oac11_subgroup <chr>, oac11_supergroup <chr>, imd <int>, lat <dbl>, #> #   lon <dbl>"},{"path":"https://p0bs.github.io/DataKindR/articles/postcodes-vignette.html","id":"presenting-our-extended-data","dir":"Articles","previous_headings":"","what":"Presenting our extended data","title":"Getting geographic metadata from UK postcodes","text":"Finally, can rejoin results directly earlier data.","code":"data_tidy |>    left_join(     data_out,      by = join_by(postcode_clean == postcode)     ) #> # A tibble: 6 × 23 #>   id    postcode    postcode_clean pcd     rgn    rgn_name pcon  pcon_name laua  #>   <chr> <chr>       <chr>          <chr>   <chr>  <chr>    <chr> <chr>     <chr> #> 1 A1    \"Me1 2re\"   ME1 2RE        ME1 2RE E1200… South E… E140… Chatham … E060… #> 2 B1    \"W1A 1AA \"  W1A 1AA        W1A 1AA E1200… London   E140… Cities o… E090… #> 3 B2    \"N1\"        NA             NA      NA     NA       NA    NA        NA    #> 4 C1    \" SW1A 0AA\" SW1A 0AA       SW1A0AA E1200… London   E140… Cities o… E090… #> 5 C2    \"XX1 0XX\"   XX1 0XX        NA      NA     NA       NA    NA        NA    #> 6 C3    \"sw6 1hs\"   SW6 1HS        SW6 1HS E1200… London   E140… Chelsea … E090… #> # ℹ 14 more variables: laua_name <chr>, lsoa21 <chr>, lsoa21_name <chr>, #> #   msoa21 <chr>, msoa21_name <chr>, ward <chr>, ward_name <chr>, #> #   oac11_code <chr>, oac11_group <chr>, oac11_subgroup <chr>, #> #   oac11_supergroup <chr>, imd <int>, lat <dbl>, lon <dbl>"},{"path":"https://p0bs.github.io/DataKindR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robin Penfold. Author, maintainer.","code":""},{"path":"https://p0bs.github.io/DataKindR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Penfold R (2025). DataKindR: Provides Helper Functions DataKind Volunteers. R package version 0.1.4, https://github.com/p0bs/DataKindR.","code":"@Manual{,   title = {DataKindR: Provides Helper Functions for DataKind Volunteers},   author = {Robin Penfold},   year = {2025},   note = {R package version 0.1.4},   url = {https://github.com/p0bs/DataKindR}, }"},{"path":"https://p0bs.github.io/DataKindR/index.html","id":"datakindr-","dir":"","previous_headings":"","what":"Provides Helper Functions for DataKind Volunteers","title":"Provides Helper Functions for DataKind Volunteers","text":"DataKind volunteers often need access specific data techniques DataDive project. goal DataKindR make easier volunteers access resources. Please note author package official affiliation DataKind UK (despite volunteered number times).","code":""},{"path":"https://p0bs.github.io/DataKindR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides Helper Functions for DataKind Volunteers","text":"can install development version DataKindR GitHub :","code":"# install.packages(\"pak\") pak::pak(\"p0bs/DataKindR\")"},{"path":"https://p0bs.github.io/DataKindR/index.html","id":"access-to-resources","dir":"","previous_headings":"","what":"Access to resources","title":"Provides Helper Functions for DataKind Volunteers","text":"Whilst list grow, DataKindR currently provides: Postcode cleansing Mapping postcodes geographical metadata example use functions, read ‘Getting geographic metadata UK postcodes’ vignette.  can think anything else, feel free contribute package. Thanks.","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/DataKindR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"DataKindR: Provides Helper Functions for DataKind Volunteers — DataKindR-package","title":"DataKindR: Provides Helper Functions for DataKind Volunteers — DataKindR-package","text":"DataKind volunteers often need access specific data techniques DataDive project. package seeks simplify access resources.","code":""},{"path":[]},{"path":"https://p0bs.github.io/DataKindR/reference/DataKindR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"DataKindR: Provides Helper Functions for DataKind Volunteers — DataKindR-package","text":"Maintainer: Robin Penfold robin.penfold@icloud.com","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean UK postcodes and extract their relevant elements — postcodes","title":"Clean UK postcodes and extract their relevant elements — postcodes","text":"function cleans UK postcode data returning relevant section (first part full postcode).","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean UK postcodes and extract their relevant elements — postcodes","text":"","code":"postcodes(postcode_value, postcode_type = \"full\")"},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean UK postcodes and extract their relevant elements — postcodes","text":"postcode_value postcode data cleaned (form 'N1 1AA', 'ME1 2RE' 'TN12 0QS'). postcode_type relevant section postcode return. one section permitted. Options : full full postcode ('N1 1AA') region first part first element postcode ('' 'ME1 2RE') area first element postcode ('ME1' 'ME1 2RE') locale area first part second element postcode ('ME1 2' 'ME1 2RE')","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean UK postcodes and extract their relevant elements — postcodes","text":"","code":"postcodes(   postcode_value = 'ME1 2re ',   postcode_type = 'region'   ) #> [1] \"ME\""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Scrape geographic metadata about UK postcodes — postcodes_metadata","title":"Scrape geographic metadata about UK postcodes — postcodes_metadata","text":"function takes clean UK postcode data returns key geographic metadata. Details include: LSOA, MSOA, Latitude, Longitude, Rank Deprivation Index (32,844 total) Constituency.","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scrape geographic metadata about UK postcodes — postcodes_metadata","text":"","code":"postcodes_metadata(postcode_value)"},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scrape geographic metadata about UK postcodes — postcodes_metadata","text":"postcode_value postcode data cleaned (form 'N1 1AA', 'ME1 2RE' 'TN12 0QS'). clean data, pass `postcodes` function package.","code":""},{"path":"https://p0bs.github.io/DataKindR/reference/postcodes_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scrape geographic metadata about UK postcodes — postcodes_metadata","text":"","code":"postcodes_metadata(   postcode_value = \"ME1 2RE\"   ) #> # A tibble: 1 × 20 #>   pcd   rgn   rgn_name pcon  pcon_name laua  laua_name lsoa21 lsoa21_name msoa21 #>   <chr> <chr> <chr>    <chr> <chr>     <chr> <chr>     <chr>  <chr>       <chr>  #> 1 ME1 … E120… South E… E140… Chatham … E060… Medway    E0101… Medway 026C E0200… #> # ℹ 10 more variables: msoa21_name <chr>, ward <chr>, ward_name <chr>, #> #   oac11_code <chr>, oac11_group <chr>, oac11_subgroup <chr>, #> #   oac11_supergroup <chr>, imd <int>, lat <dbl>, lon <dbl>"},{"path":"https://p0bs.github.io/DataKindR/news/index.html","id":"datakindr-014","dir":"Changelog","previous_headings":"","what":"DataKindR 0.1.4","title":"DataKindR 0.1.4","text":"Simplify vignette","code":""},{"path":"https://p0bs.github.io/DataKindR/news/index.html","id":"datakindr-013","dir":"Changelog","previous_headings":"","what":"DataKindR 0.1.3","title":"DataKindR 0.1.3","text":"Fixed bug reflect recent change httr2 regard url handling improvements","code":""},{"path":"https://p0bs.github.io/DataKindR/news/index.html","id":"datakindr-012","dir":"Changelog","previous_headings":"","what":"DataKindR 0.1.2","title":"DataKindR 0.1.2","text":"Update postcodes_metadata include data local authorities number imd values available Changed vignette accordingly","code":""},{"path":"https://p0bs.github.io/DataKindR/news/index.html","id":"datakindr-011","dir":"Changelog","previous_headings":"","what":"DataKindR 0.1.1","title":"DataKindR 0.1.1","text":"Added vignette getting geographic metadata UK postcodes","code":""},{"path":"https://p0bs.github.io/DataKindR/news/index.html","id":"datakindr-010","dir":"Changelog","previous_headings":"","what":"DataKindR 0.1.0","title":"DataKindR 0.1.0","text":"Initial version postcodes postcodes_metadata functions Added NEWS.md file track changes package Added tests pkgdown standard package framework","code":""}]
